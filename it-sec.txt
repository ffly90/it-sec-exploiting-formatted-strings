=====Wie funktioniert ein Funktionsaufruf in C=====

Bei Funktionsaufrufen ist es essentiell, dass ein nahezu beliebiger Grad an Rekursion bzw. Verschachtelung von Funktionsaufrufen vorgenommen werden kann ohne den Ablauf des Programms in seiner funktionalität zu beeinträchtigen. Lediglich die Beschränkung durch eine endliche Menge an Ressourcen soll den die maximal mögliche Verschachtelung beschränken.

Aus Speichersicht läuft der Aufruf einer Funktion aus einem Programm folgendermaßen ab. Die aufrufende Anwendung legt zuerst die Rücksprungadresse auf den Stack um zu definieren, welcher Code nach Abschluss der Funktion ausgeführt werden soll. Anschließend wird die Funktion gestartet. Schritt für Schritt werden nun die Framepointer, übergebe Parameter und lokale Variablen auf den Stack gelegt bevor zur Abarbeitung des Funktionscodes übergegangen wird. Zum Schluss wird der Speicher wieder freigegeben und der Instruction Pointer auf die Rücksprungadresse gesetzt wird.




